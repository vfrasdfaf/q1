Файловая структура: Проект состоит из двух файлов в корневой директории:
index.php: Содержит всю PHP-логику, обработку запросов, HTML-шаблоны для всех страниц и встроенные CSS-стили.
users.json: JSON-файл для хранения данных пользователей. Важно: users.json должен быть МАССИВОМ объектов пользователей [ { ... }, { ... } ], даже если пользователь один.
index.php - Основной файл:
Конфигурация: Константы (путь к users.json, параметры блокировки) определены в начале файла.
Сессия: Сессия стартует (session_start()) для управления состоянием пользователя.
Вспомогательные функции: Функции для работы с JSON (getUsers, saveUsers), проверки авторизации (isLoggedIn, isAdmin), генерации ID, перенаправления (redirect) и отображения сообщений (displayMessage) находятся внутри index.php.
Маршрутизация и обработка запросов:
Текущее действие ($action) определяется из $_GET['action'].
Логика обработки POST-запросов (вход, регистрация, смена пароля, действия администратора) сгруппирована в условных блоках в зависимости от $action.
После операций, изменяющих данные, происходит редирект на index.php с передачей статуса операции через GET-параметры.
HTML-вывод:
Единый HTML-каркас с встроенными CSS-стилями.
Условные PHP-блоки (if ($action === '...')) отображают разные "страницы" (формы, панели).
Все ссылки и action форм ведут на index.php с указанием action в GET-параметре.
users.json:
Содержит массив объектов, где каждый объект представляет пользователя со свойствами: id, username, password (в открытом виде), role, failed_attempts, last_attempt_time, is_locked, last_login_time.
Функционал:
Аутентификация: Вход пользователя с проверкой имени и пароля (без хеширования).
Регистрация: Создание новых пользователей (пароль сохраняется в открытом виде).
Управление сессией: Отслеживание авторизованного пользователя.
Панель пользователя: Отображение информации, ссылки на смену пароля и выход.
Смена пароля: Возможность для пользователя изменить свой пароль.
Панель администратора (для роли 'admin'):
Добавление новых пользователей.
Просмотр списка всех пользователей.
Изменение пароля, роли, удаление и разблокировка других пользователей.
Блокировка аккаунта:
После нескольких неудачных попыток входа (MAX_LOGIN_ATTEMPTS).
При неактивности пользователя более месяца (INACTIVITY_LOCKOUT_DURATION), если last_login_time не равно 0.
Безопасность: Используется htmlspecialchars() для вывода данных